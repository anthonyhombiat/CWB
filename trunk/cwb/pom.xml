<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>lig.steamer.cwb</groupId>
	<artifactId>cwb</artifactId>
	<packaging>war</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>CitizenWelfareBuilder</name>
	<description>CitizenWelfareBuilder is a computing environment dedicated to building and analyzing citizen well-being indicators at the local level. This decision-making tool takes advantage from Open Data and Volunteered Geographic Information to assist land use planning. Its architecture is divided into 4 bundles. The first one is dedicated to the creation of a well-being ontology based on the alignment of concepts coming both from folksonomies and official nomenclatures. The second one consist in supporting the creation of questionnaires by social sciences experts about the citizens' expectations and impressions regarding well-being. The third one is concerned with the confrontation of the citizens expectations to ground-truth. Finally, the fourth module focuses on the spatio-temporal analysis of the collected data.</description>
	<url>http://maven.apache.org</url>

	<dependencies>

		<!-- JUnit for unit testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
		</dependency>

		<!-- Google Guava API -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>12.0</version>
		</dependency>

		<!-- Jena API for modeling and manipulating ontologies (required by the 
			Alignment API) -->
		<dependency>
			<groupId>com.hp.hpl.jena</groupId>
			<artifactId>jena</artifactId>
			<version>2.6.4</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
				<exclusion>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- OWL API for modeling and manipulating ontologies -->
		<dependency>
			<groupId>net.sourceforge.owlapi</groupId>
			<artifactId>owlapi-distribution</artifactId>
			<version>3.5.0</version>
		</dependency>

		<!-- Apache HttpClient for wrapping Http GET request to restful Web Services -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.3.3</version>
		</dependency>

		<!-- Apache commons configuration for accessing xml config files -->
		<dependency>
			<groupId>commons-configuration</groupId>
			<artifactId>commons-configuration</artifactId>
			<version>1.9</version>
		</dependency>

		<!-- Alignment API for matching ontologies and modeling the resulting alignments -->
		<dependency>
			<groupId>org.semanticweb.owl</groupId>
			<artifactId>align</artifactId>
			<version>4.6</version>
		</dependency>
		<dependency>
			<groupId>fr.inrialpes.exmo.align</groupId>
			<artifactId>alignsvc</artifactId>
			<version>4.6</version>
		</dependency>
		<dependency>
			<groupId>fr.inrialpes.exmo.align</groupId>
			<artifactId>procalign</artifactId>
			<version>4.6</version>
		</dependency>
		<dependency>
			<groupId>fr.inrialpes.exmo</groupId>
			<artifactId>ontowrap</artifactId>
			<version>4.6</version>
		</dependency>
		<dependency>
			<groupId>fr.inrialpes.exmo</groupId>
			<artifactId>ontosim</artifactId>
			<version>2.4</version>
		</dependency>

		<!-- WikiMatch multilingual ontology matcher -->
		<dependency>
			<groupId>de.tudarmstadt.ke.sw.matching</groupId>
			<artifactId>wikimatch</artifactId>
			<version>1.0</version>
		</dependency>

		<!-- YAM++ multilingual ontology matcher -->
		<dependency>
			<groupId>ekaw.bda</groupId>
			<artifactId>yam</artifactId>
			<version>2012</version>
		</dependency>

		<!-- RiMOM2 multilingual ontology matcher -->
		<dependency>
			<groupId>edu.thu.keg</groupId>
			<artifactId>rimom2</artifactId>
			<version>1.0</version>
		</dependency>

		<!-- Vaadin RIA Web Framework for Java JVM dependencies -->
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-server</artifactId>
			<version>${vaadin.version}</version>
		</dependency>

		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-client-compiled</artifactId>
			<version>${vaadin.version}</version>
		</dependency>

		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-client-compiler</artifactId>
			<version>${vaadin.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-client</artifactId>
			<version>${vaadin.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-push</artifactId>
			<version>${vaadin.version}</version>
		</dependency>

		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-themes</artifactId>
			<version>${vaadin.version}</version>
		</dependency>

		<!-- Java Servlet API -->
		<!-- <dependency> -->
		<!-- <groupId>javax.servlet</groupId> -->
		<!-- <artifactId>javax.servlet-api</artifactId> -->
		<!-- <version>3.0.1</version> -->
		<!-- <scope>provided</scope> -->
		<!-- </dependency> -->

		<!-- Leaflet add-on for Vaadin -->
		<dependency>
			<groupId>org.vaadin.addon</groupId>
			<artifactId>v-leaflet</artifactId>
			<version>0.5.6</version>
		</dependency>

		<!-- ConfirmDialog Vaadin add-on -->
		<dependency>
			<groupId>org.vaadin.addon</groupId>
			<artifactId>confirmdialog</artifactId>
			<version>2.0.5</version>
		</dependency>

		<!-- OpenLayers add-on for Vaadin -->
		<!-- <dependency> -->
		<!-- <groupId>org.vaadin.vol</groupId> -->
		<!-- <artifactId>openlayers-wrapper</artifactId> -->
		<!-- <version>1.3.1</version> -->
		<!-- </dependency> -->

	</dependencies>

	<!-- Vaadin RIA Web Framework for Java JVM configuration -->
	<properties>
		<project.name>Citizen Welfare Builder</project.name>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<vaadin.version>7.2.0</vaadin.version>
		<vaadin.plugin.version>${vaadin.version}</vaadin.plugin.version>
	</properties>

	<repositories>

		<repository>
			<id>vaadin-addons</id>
			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>

		<repository>
			<id>vaadin-snapshots</id>
			<url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>

	</repositories>

	<pluginRepositories>

		<pluginRepository>
			<id>vaadin-snapshots</id>
			<url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>

	</pluginRepositories>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>tomcat-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<url>http://127.0.0.1:8080/manager/html</url>
					<server>TomcatServer</server>
					<path>/cwb</path>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<!-- As we are doing "inplace" GWT compilation, ensure the widgetset -->
			<!-- directory is cleaned properly -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.4.1</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>src/main/webapp/VAADIN/widgetsets</directory>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-maven-plugin</artifactId>
				<version>${vaadin.plugin.version}</version>
				<configuration>
					<extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
					<!-- <runTarget>mobilemail</runTarget> -->
					<!-- We are doing "inplace" but into subdir VAADIN/widgetsets. This 
						way compatible with Vaadin eclipse plugin. -->
					<webappDirectory>${basedir}/src/main/webapp/VAADIN/widgetsets
					</webappDirectory>
					<hostedWebapp>${basedir}/src/main/webapp/VAADIN/widgetsets
					</hostedWebapp>
					<!-- Most Vaadin apps don't need this stuff, guide that to target -->
					<persistentunitcachedir>${project.build.directory}</persistentunitcachedir>
					<deploy>${project.build.directory}/gwt-deploy</deploy>
					<!-- Compile report is not typically needed either, saves hunreds of 
						mb disk -->
					<compileReport>false</compileReport>
					<noServer>true</noServer>
					<!-- Remove draftCompile when project is ready -->
					<draftCompile>false</draftCompile>

					<style>OBF</style>
					<strict>true</strict>
					<runTarget>http://localhost:8080/</runTarget>
				</configuration>
				<executions>
					<execution>
						<configuration>
							<!-- if you don't specify any modules, the plugin will find them -->
							<!-- <modules> <module>com.vaadin.demo.mobilemail.gwt.ColorPickerWidgetSet</module> 
								</modules> -->
						</configuration>
						<goals>
							<goal>clean</goal>
							<goal>resources</goal>
							<goal>update-theme</goal>
							<goal>update-widgetset</goal>
							<goal>compile-theme</goal>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>8.1.15.v20140411</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.7</version>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.vaadin</groupId>
										<artifactId>
											vaadin-maven-plugin
										</artifactId>
										<versionRange>
											[7.2.0,)
										</versionRange>
										<goals>
											<goal>resources</goal>
											<goal>update-widgetset</goal>
											<goal>compile</goal>
											<goal>update-theme</goal>
											<goal>compile-theme</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-eclipse-plugin</artifactId>
					<configuration>
						<wtpversion>2.0</wtpversion>
						<additionalProjectnatures>
							<projectnature>com.vaadin.integration.eclipse.widgetsetNature</projectnature>
						</additionalProjectnatures>
						<additionalBuildcommands>
							<buildcommand>com.vaadin.integration.eclipse.widgetsetBuilder</buildcommand>
							<buildcommand>com.vaadin.integration.eclipse.addonStylesBuilder</buildcommand>
						</additionalBuildcommands>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>2.7</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.7</version>
			</plugin>
		</plugins>
	</reporting>

	<developers>

		<developer>
			<id>anthony.hombiat</id>
			<name>Anthony Hombiat</name>
			<email>anthony.hombiat@imag.fr</email>
			<url>http://lig-membres.imag.fr/hombiat/</url>
			<organization>LIG - STeamer</organization>
			<organizationUrl>http://steamer.imag.fr/</organizationUrl>
			<roles>
				<role>architect</role>
				<role>developer</role>
			</roles>
		</developer>

		<developer>
			<id>jerome.gensel</id>
			<name>Jérôme Gensel</name>
			<email>jerome.gensel@imag.fr</email>
			<url>http://lig-membres.imag.fr/gensel/</url>
			<organization>LIG - STeamer</organization>
			<organizationUrl>http://steamer.imag.fr/</organizationUrl>
			<roles>
				<role>supervisor</role>
			</roles>
		</developer>

		<developer>
			<id>marlene.villanova-oliver</id>
			<name>Marlène Villanova-Oliver</name>
			<email>marlene.villanova-oliver@imag.fr</email>
			<url>http://lig-membres.imag.fr/villanova/</url>
			<organization>LIG - STeamer</organization>
			<organizationUrl>http://steamer.imag.fr/</organizationUrl>
			<roles>
				<role>co-supervisor</role>
			</roles>
		</developer>

	</developers>

	<organization>
		<name>LIG - STeamer</name>
		<url>http://steamer.imag.fr/</url>
	</organization>

</project>
